name: Build and Release

on:
  release:
    types: [published]  # Triggers when you publish a release
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed to create releases and upload assets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Get project version and JAR name
        id: project
        run: |
          if [ -f pom.xml ]; then
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout 2>/dev/null || echo "1.0.0")
          else
            VERSION="1.0.0"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Find the JAR file
          JAR_FILE=$(find target -name "*.jar" -not -name "*original*" | head -n1)
          if [ -n "$JAR_FILE" ]; then
            JAR_NAME=$(basename "$JAR_FILE")
          else
            JAR_NAME="AntiChests.jar"
          fi
          echo "jar-name=$JAR_NAME" >> $GITHUB_OUTPUT
          echo "jar-path=$JAR_FILE" >> $GITHUB_OUTPUT

      - name: Upload JAR to existing Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: ${{ steps.project.outputs.jar-path }}
          name: AntiChests-${{ steps.project.outputs.version }}.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Build on every push to main for CI
  continuous-integration:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean compile test-compile

      - name: Run tests (if any)
        run: mvn test || echo "No tests found, skipping..."